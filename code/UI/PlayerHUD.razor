@using Sandbox;
@using Sandbox.UI;
@inherits PanelComponent
@namespace Sandbox

<root class="@(Network.IsProxy ? "hidden" : "")">
		<div class="stamina-container">
			<p>🏃‍♂️</p>
			<div class="cooldown-bar" style="height: @( player.CurrentStamina )%; width: 100%;">
				
			</div>
		</div>


			<div class="isit-container">
			@if( player.IsIt && GM.TimeLeftString != "00:00"){<title>You're it!</title>}
			@if( !player.IsIt && GM.TimeLeftString != "00:00"){<title>@GM.PlayerIt is it!</title>}
			@if( GM.TimeLeftString == "00:00" && player.PlayerName != GM.PlayerIt ){<title>@GM.PlayerIt loses!</title>}
			@if( GM.TimeLeftString == "00:00" ){<title>You lose!</title>}
			</div>

			@if( player.IsIt )
			{
			<div class="ballthrow-container">
				<p>🤾‍♀️</p>
				<div class="ballthrow-bar" style="height: @( (player.CurrentBallThrow / player.BallThrowMax) * 100f )%; width: 100%;">
				
				</div>
			</div>
			}

		<div class="timer-container">
			<p>🕤@GM.TimeLeftString</p>
		</div>

		<div class="crosshair">
			<title>⚪</title>
		</div>
</root>

@code
{

	[Property]
	public PlayerInfo player { get; set; } = PlayerInfo.Local;
	[Property]
	public GameManager GM { get; set; }

	protected override void OnStart()
	{
		GetTimer();
	}

	[Rpc.Broadcast]
	public void GetTimer()
	{
		IEnumerable<GameManager> GMList = Scene.GetAllComponents<GameManager>();
		GM = GMList.FirstOrDefault();
	}

	/// <summary>
	/// the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
	/// </summary>
	protected override int BuildHash() => System.HashCode.Combine( player.IsIt, player.CurrentStamina, player.CurrentBallThrow, GM.TimeLeftString, GM.PlayerIt );
}